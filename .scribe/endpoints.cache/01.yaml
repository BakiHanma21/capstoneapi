## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Auth API'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Auth API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: maddison95@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: maddison95@example.org
      password: est
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'Auth API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: youugvqgmbeidbgf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: josianne.cummerata@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'OE:d2=h^d2PtS!Pd\'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      profile_image:
        name: profile_image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      experience:
        name: experience
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mxtrkronq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      availability:
        name: availability
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nnzzicpstbeihcvlpaoeirpnr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      occupation:
        name: occupation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nptplgghsgtnyfhqeqrpfpouj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      skills:
        name: skills
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vfwqozrlfzkmvgjopl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      valid_id:
        name: valid_id
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purok:
        name: purok
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zwm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      street:
        name: street
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ofgaqxowhhsmxucb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: youugvqgmbeidbgf
      email: josianne.cummerata@example.com
      password: 'OE:d2=h^d2PtS!Pd\'
      experience: mxtrkronq
      availability: nnzzicpstbeihcvlpaoeirpnr
      occupation: nptplgghsgtnyfhqeqrpfpouj
      skills: vfwqozrlfzkmvgjopl
      purok: zwm
      street: ofgaqxowhhsmxucb
    fileParameters:
      profile_image: null
      valid_id: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: 'Auth API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot Password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: sdubuque@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: sdubuque@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: 'Auth API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: eino23@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: "{'e|F]IQ9G~B0"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: quae
      email: eino23@example.net
      password: "{'e|F]IQ9G~B0"
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
