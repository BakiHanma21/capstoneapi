name: 'User API'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/users?page=1","last":"http:\/\/localhost\/api\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/users","per_page":20,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'https://khelproject.dev'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: hudson.justine@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      profile_image:
        name: profile_image
        description: ''
        required: false
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      availability:
        name: availability
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      occupation:
        name: occupation
        description: ''
        required: true
        example: neque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      skills:
        name: skills
        description: ''
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      valid_id:
        name: valid_id
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purok:
        name: purok
        description: ''
        required: false
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      street:
        name: street
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: quia
      email: hudson.justine@example.net
      role: impedit
      profile_image: sit
      location: delectus
      availability: velit
      occupation: neque
      skills: quidem
      valid_id: unde
      purok: exercitationem
      street: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\User] 4"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'https://khelproject.dev'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: rozella87@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      profile_image:
        name: profile_image
        description: ''
        required: false
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      availability:
        name: availability
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      occupation:
        name: occupation
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      skills:
        name: skills
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      valid_id:
        name: valid_id
        description: ''
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purok:
        name: purok
        description: ''
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      street:
        name: street
        description: ''
        required: false
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: aliquid
      email: rozella87@example.com
      role: animi
      profile_image: tempora
      location: aspernatur
      availability: fugit
      occupation: illum
      skills: ut
      valid_id: vero
      purok: voluptatem
      street: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
